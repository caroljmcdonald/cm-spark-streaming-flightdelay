{"paragraphs":[{"title":"Import needed packages","text":"import org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport spark.implicits._\n","user":"anonymous","dateUpdated":"2017-12-02T03:40:04-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark._\n\nimport org.apache.spark.ml._\n\nimport org.apache.spark.ml.feature._\n\nimport org.apache.spark.ml.classification._\n\nimport org.apache.spark.ml.evaluation._\n\nimport org.apache.spark.ml.tuning._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.types._\n\nimport spark.implicits._\n"}]},"apps":[],"jobName":"paragraph_1512172000801_-1761938795","id":"20170508-144514_403247535","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:40:05-0800","dateFinished":"2017-12-02T03:40:17-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7408"},{"text":"%md \nFor this tutorial, we'll be using data from http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time.\nThe CSV data has been cleaned and tranformed into 2 JSON files with the following format: \n{\"dofM\":1,\"dofW\":7,\"carrier\":\"AA\",\"fldate\":\"2017-01-01\",\"flnum\":\"1678\",\"origin\":\"ATL\",\"dest\":\"LGA\",\"crsdephour\":17,\"crsdeptime\":1700,\"depdelay\":0.0,\"crsarrtime\":1912,\"arrdelay\":0.0,\"crselapsedtime\":132.0,\"dist\":762.0}\n\nWe use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>For this tutorial, we&rsquo;ll be using data from <a href=\"http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time\">http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time</a>.<br/>The CSV data has been cleaned and tranformed into 2 JSON files with the following format:<br/>{&ldquo;dofM&rdquo;:1,&ldquo;dofW&rdquo;:7,&ldquo;carrier&rdquo;:&ldquo;AA&rdquo;,&ldquo;fldate&rdquo;:&ldquo;2017-01-01&rdquo;,&ldquo;flnum&rdquo;:&ldquo;1678&rdquo;,&ldquo;origin&rdquo;:&ldquo;ATL&rdquo;,&ldquo;dest&rdquo;:&ldquo;LGA&rdquo;,&ldquo;crsdephour&rdquo;:17,&ldquo;crsdeptime&rdquo;:1700,&ldquo;depdelay&rdquo;:0.0,&ldquo;crsarrtime&rdquo;:1912,&ldquo;arrdelay&rdquo;:0.0,&ldquo;crselapsedtime&rdquo;:132.0,&ldquo;dist&rdquo;:762.0}</p>\n<p>We use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000810_-1763862540","id":"20170530-122945_1594214131","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7409"},{"title":"Define Schema for JSON file data","text":"/*\n  {\"_id\":\"AA_2017-01-01_ORD_DEN_2300\",\"dofW\":7,\"carrier\":\"AA\",\"origin\":\"ORD\",\n  \"dest\":\"DEN\",\"crsdephour\":10, \"crsdeptime\":1005,\"depdelay\":5.0,\"crsarrtime\":1145,\n  \"arrdelay\":3.0,\"crselapsedtime\":160.0,\"dist\":888.0}\n*/  \n\ncase class Flight(_id: String, dofW: Integer, carrier: String, origin: String, \n   dest: String,crsdephour:Integer,crsdeptime:Integer,depdelay:Double, crsarrtime:Integer, \n   arrdelay: Double, crselapsedtime: Double, dist: Double) extends Serializable\n\n  val schema = StructType(Array(\n    StructField(\"_id\", StringType, true),\n    StructField(\"dofW\", IntegerType, true),\n    StructField(\"carrier\", StringType, true),\n    StructField(\"origin\", StringType, true),\n    StructField(\"dest\", StringType, true),\n    StructField(\"crsdephour\", IntegerType, true),\n    StructField(\"crsdeptime\", IntegerType, true),\n    StructField(\"depdelay\", DoubleType, true),\n    StructField(\"crsarrtime\", IntegerType, true),\n    StructField(\"arrdelay\", DoubleType, true),\n    StructField(\"crselapsedtime\", DoubleType, true),\n    StructField(\"dist\", DoubleType, true)\n  ))\n","user":"anonymous","dateUpdated":"2017-12-02T03:42:46-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class Flight\n\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(_id,StringType,true), StructField(dofW,IntegerType,true), StructField(carrier,StringType,true), StructField(origin,StringType,true), StructField(dest,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,IntegerType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,IntegerType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true))\n"}]},"apps":[],"jobName":"paragraph_1512172000812_-1766171033","id":"20170508-150032_326029627","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:42:47-0800","dateFinished":"2017-12-02T03:42:50-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7410"},{"title":"Read the data from JSON file into a Dataset of type Flight","text":"val df = spark.read.option(\"inferSchema\", \"false\").schema(schema)\n  .json(\"/user/user01/data/flights20170102.json\").as[Flight]\ndf.count()","user":"anonymous","dateUpdated":"2017-12-02T03:43:11-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.Dataset[Flight] = [_id: string, dofW: int ... 10 more fields]\n\nres6: Long = 41348\n"}]},"apps":[],"jobName":"paragraph_1512172000819_-1755013315","id":"20170508-150131_378637203","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:43:11-0800","dateFinished":"2017-12-02T03:43:27-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7411"},{"title":"Display the first 20 rows","text":"df.show","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+\n|                 _id|dofW|carrier|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+\n|AA_2017-01-01_ATL...|   7|     AA|   ATL| LGA|        17|    1700.0|     0.0|    1912.0|     0.0|         132.0| 762.0|\n|AA_2017-01-01_LGA...|   7|     AA|   LGA| ATL|        13|    1343.0|     0.0|    1620.0|     0.0|         157.0| 762.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| ATL|         9|     939.0|     0.0|    1137.0|    10.0|         118.0| 594.0|\n|AA_2017-01-01_ORD...|   7|     AA|   ORD| MIA|        20|    2020.0|     0.0|      26.0|     0.0|         186.0|1197.0|\n|AA_2017-01-01_LGA...|   7|     AA|   LGA| MIA|         7|     700.0|     0.0|    1017.0|     0.0|         197.0|1096.0|\n|AA_2017-01-01_ORD...|   7|     AA|   ORD| DEN|        13|    1345.0|     0.0|    1527.0|     0.0|         162.0| 888.0|\n|AA_2017-01-01_DEN...|   7|     AA|   DEN| MIA|        11|    1100.0|     0.0|    1649.0|     0.0|         229.0|1709.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| DEN|         7|     720.0|     7.0|     949.0|     0.0|         269.0|1709.0|\n|AA_2017-01-01_DEN...|   7|     AA|   DEN| ORD|        12|    1235.0|     0.0|    1600.0|     0.0|         145.0| 888.0|\n|AA_2017-01-01_ORD...|   7|     AA|   ORD| DEN|        10|    1005.0|     5.0|    1145.0|     3.0|         160.0| 888.0|\n|AA_2017-01-01_IAH...|   7|     AA|   IAH| MIA|         7|     701.0|     9.0|    1025.0|     0.0|         144.0| 964.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| IAH|        20|    2045.0|    80.0|    2238.0|    63.0|         173.0| 964.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| LGA|        20|    2025.0|     0.0|    2325.0|     0.0|         180.0|1096.0|\n|AA_2017-01-01_DEN...|   7|     AA|   DEN| MIA|        24|    2359.0|    23.0|     550.0|     7.0|         231.0|1709.0|\n|AA_2017-01-01_ORD...|   7|     AA|   ORD| BOS|        15|    1508.0|     0.0|    1818.0|     0.0|         130.0| 867.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| LGA|        18|    1756.0|    85.0|    2049.0|    73.0|         173.0|1096.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| ORD|        10|    1005.0|     4.0|    1231.0|     0.0|         206.0|1197.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| DEN|        16|    1621.0|    43.0|    1846.0|    43.0|         265.0|1709.0|\n|DL_2017-01-01_MIA...|   7|     DL|   MIA| ATL|        19|    1900.0|     4.0|    2105.0|     0.0|         125.0| 594.0|\n|DL_2017-01-01_MIA...|   7|     DL|   MIA| ATL|        16|    1618.0|    29.0|    1823.0|    35.0|         125.0| 594.0|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512172000822_-1756167562","id":"20171129-221736_959969733","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7412"},{"text":"df.printSchema","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- _id: string (nullable = true)\n |-- dofW: integer (nullable = true)\n |-- carrier: string (nullable = true)\n |-- origin: string (nullable = true)\n |-- dest: string (nullable = true)\n |-- crsdephour: integer (nullable = true)\n |-- crsdeptime: double (nullable = true)\n |-- depdelay: double (nullable = true)\n |-- crsarrtime: double (nullable = true)\n |-- arrdelay: double (nullable = true)\n |-- crselapsedtime: double (nullable = true)\n |-- dist: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1512172000831_-1759630302","id":"20171129-223643_463511351","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7413"},{"text":"val test = spark.read.option(\"inferSchema\", \"false\").schema(schema)\n.json(\"/user/user01/data/flights20170304.json\").as[Flight]\ntest.count()      ","user":"anonymous","dateUpdated":"2017-12-02T03:43:22-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntest: org.apache.spark.sql.Dataset[Flight] = [_id: string, dofW: int ... 10 more fields]\n\nres7: Long = 45448\n"}]},"apps":[],"jobName":"paragraph_1512172000834_-1773096514","id":"20170508-150324_497571301","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:43:22-0800","dateFinished":"2017-12-02T03:43:31-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7414"},{"title":"Register Dataset as a Temporary View in order to explore with SQL","text":"df.createOrReplaceTempView(\"flights\")\nspark.catalog.cacheTable(\"flights\")\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"stackedAreaChart":{}},"commonSetting":{},"keys":[{"name":"churn","index":19,"aggr":"sum"}],"groups":[],"values":[{"name":"len","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1512172000844_-1778482998","id":"20170508-150408_505244914","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7415"},{"text":"%md\nThe describe() function performs summary statistics calculations on  numeric columns ","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The describe() function performs summary statistics calculations on numeric columns</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000847_-1778098249","id":"20170524-214640_973339640","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7416"},{"title":"Perform summary statistics  on selected columns","text":"\ndf.describe(\"dist\", \"crselapsedtime\",\"depdelay\", \"arrdelay\").show","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+------------------+------------------+------------------+\n|summary|              dist|    crselapsedtime|          depdelay|          arrdelay|\n+-------+------------------+------------------+------------------+------------------+\n|  count|             41348|             41348|             41348|             41348|\n|   mean|1111.0529167069749|186.26264873754474|15.018719164167553|14.806907226468027|\n| stddev| 568.7941212507543| 68.38149648990039| 44.52963204436135| 44.22370513266647|\n|    min|             184.0|              64.0|               0.0|               0.0|\n|    max|            2704.0|             423.0|            1440.0|            1442.0|\n+-------+------------------+------------------+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1512172000851_-1767325280","id":"20170524-083228_1459810795","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7417"},{"title":"Calculate the correlation between Departure Delay and Arrival Delay","text":"import org.apache.spark.mllib.stat.Statistics\nval depdelay = df.select(\"depdelay\").map{row:Row => row.getAs[Double](\"depdelay\")}.rdd\nval arrdelay = df.select( \"arrdelay\").map{row:Row => row.getAs[Double](\"arrdelay\")}.rdd\nval correlation = Statistics.corr(depdelay,arrdelay, \"pearson\")","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.mllib.stat.Statistics\n\ndepdelay: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[88] at rdd at <console>:80\n\narrdelay: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[91] at rdd at <console>:80\n\ncorrelation: Double = 0.9651683038612937\n"}]},"apps":[],"jobName":"paragraph_1512172000852_-1769249025","id":"20170524-093152_48310549","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7418"},{"text":"%md \nUse Spark SQL to explore the dataset","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Use Spark SQL to explore the dataset</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000854_-1768479527","id":"20170603-182655_1680505289","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7419"},{"title":"Top 5 Longest departure delays","text":"%sql \nselect carrier,origin, dest, depdelay,crsdephour, dist, dofW\nfrom flights \norder by depdelay desc limit 5 \n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\torigin\tdest\tdepdelay\tcrsdephour\tdist\tdofW\nAA\tSFO\tORD\t1440.0\t8\t1846.0\t3\nDL\tBOS\tATL\t1185.0\t17\t946.0\t6\nUA\tDEN\tEWR\t1138.0\t12\t1605.0\t4\nDL\tORD\tATL\t1087.0\t19\t606.0\t7\nUA\tMIA\tEWR\t1072.0\t20\t1085.0\t1\n"}]},"apps":[],"jobName":"paragraph_1512172000862_-1771557518","id":"20171110-195321_1924356975","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7420"},{"title":"Average Departure Delay by Carrier","text":"%sql select carrier, avg(depdelay)\nfrom flights\ngroup by carrier","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tavg(depdelay)\nUA\t17.477878450696764\nAA\t10.45768118831622\nDL\t15.316061660865241\nWN\t13.491000418585182\n"}]},"apps":[],"jobName":"paragraph_1512172000864_-1786177976","id":"20171110-195759_439800395","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7421"},{"title":"Maximum Departure Delay by Carrier","text":"%sql\nselect carrier, max(depdelay)\nfrom flights\ngroup by carrier","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tmax(depdelay)\nUA\t1138.0\nAA\t1440.0\nDL\t1185.0\nWN\t375.0\n"}]},"apps":[],"jobName":"paragraph_1512172000865_-1786562725","id":"20171129-194230_774307118","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7422"},{"title":"Count of Departure Delays by Carrier (where delay=40 minutes)","text":"%sql\nselect carrier, count(depdelay)\nfrom flights where depdelay > 40\ngroup by carrier","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tcount(depdelay)\nUA\t2420\nAA\t757\nDL\t1043\nWN\t244\n"}]},"apps":[],"jobName":"paragraph_1512172000867_-1785793227","id":"20171123-042011_1532799341","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7423"},{"title":"Count of Departure Delays by Day of the Week (1=Monday, 7=Sunday)","text":"%sql\nselect dofW, count(depdelay)\nfrom flights where depdelay > 40\ngroup by dofW\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tcount(depdelay)\n1\t940\n6\t424\n3\t482\n5\t579\n4\t626\n7\t701\n2\t712\n"}]},"apps":[],"jobName":"paragraph_1512172000875_-1788871218","id":"20171123-101016_2040441762","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7424"},{"title":"Count of Departure Delays by Hour of Day","text":"%sql\nselect crsdephour, count(depdelay)\nfrom flights where depdelay > 40\ngroup by crsdephour\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"crsdephour\tcount(depdelay)\n12\t227\n22\t65\n1\t1\n13\t336\n16\t351\n6\t68\n20\t230\n5\t15\n19\t371\n15\t331\n17\t474\n9\t175\n8\t190\n23\t27\n7\t112\n10\t284\n24\t9\n21\t160\n11\t280\n14\t353\n0\t9\n18\t396\n"}]},"apps":[],"jobName":"paragraph_1512172000878_-1790025465","id":"20171129-200107_756396508","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7425"},{"title":"Count of Departure Delays by Origin","text":"%sql\nselect origin, count(depdelay)\nfrom flights where depdelay > 40\ngroup by origin\nORDER BY count(depdelay) desc","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tcount(depdelay)\nORD\t679\nATL\t637\nSFO\t542\nEWR\t518\nDEN\t484\nIAH\t447\nLGA\t432\nMIA\t429\nBOS\t296\n"}]},"apps":[],"jobName":"paragraph_1512172000885_-1781945738","id":"20171123-101839_1671246939","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7426"},{"title":"Count of Departure Delays by Destination","text":"%sql\nselect dest, count(depdelay)\nfrom flights where depdelay > 40\ngroup by dest\nORDER BY count(depdelay) desc\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dest\tcount(depdelay)\nSFO\t711\nEWR\t620\nORD\t593\nATL\t547\nLGA\t535\nDEN\t397\nMIA\t385\nBOS\t343\nIAH\t333\n"}]},"apps":[],"jobName":"paragraph_1512172000886_-1780791492","id":"20171123-102221_687729087","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7427"},{"title":"Count of Departure Delays by Origin, Destination","text":"%sql\nselect origin, dest, count(depdelay)\nfrom flights where depdelay > 40\ngroup by origin, dest\nORDER BY count(depdelay) desc\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":0,"aggr":"sum"}],"groups":[{"name":"dest","index":1,"aggr":"sum"}],"values":[{"name":"count(depdelay)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tdest\tcount(depdelay)\nDEN\tSFO\t172\nORD\tSFO\t168\nATL\tLGA\t155\nATL\tEWR\t141\nSFO\tDEN\t134\nLGA\tATL\t130\nORD\tEWR\t122\nSFO\tORD\t118\nEWR\tORD\t115\nORD\tLGA\t100\nIAH\tSFO\t98\nIAH\tEWR\t94\nMIA\tLGA\t92\nORD\tATL\t88\nLGA\tORD\t88\nATL\tSFO\t87\nLGA\tMIA\t81\nSFO\tEWR\t79\nEWR\tSFO\t77\nORD\tDEN\t76\nEWR\tATL\t76\nEWR\tIAH\t75\nATL\tORD\t74\nDEN\tEWR\t73\nEWR\tMIA\t69\nDEN\tLGA\t67\nLGA\tBOS\t67\nEWR\tBOS\t67\nATL\tMIA\t66\nMIA\tEWR\t66\nMIA\tATL\t64\nSFO\tIAH\t62\nBOS\tLGA\t62\nIAH\tLGA\t59\nSFO\tATL\t59\nDEN\tORD\t57\nMIA\tSFO\t57\nIAH\tMIA\t57\nMIA\tIAH\t55\nDEN\tATL\t54\nSFO\tBOS\t52\nBOS\tSFO\t52\nMIA\tORD\t50\nBOS\tATL\t49\nIAH\tORD\t48\nORD\tBOS\t46\nATL\tBOS\t46\nIAH\tDEN\t46\nBOS\tEWR\t45\nATL\tDEN\t43\nBOS\tORD\t43\nORD\tMIA\t43\nDEN\tIAH\t39\nEWR\tDEN\t39\nSFO\tMIA\t38\nORD\tIAH\t36\nLGA\tDEN\t35\nMIA\tBOS\t32\nLGA\tIAH\t31\nIAH\tATL\t27\nATL\tIAH\t25\nBOS\tMIA\t24\nIAH\tBOS\t18\nDEN\tBOS\t15\nMIA\tDEN\t13\nBOS\tDEN\t11\nBOS\tIAH\t10\nDEN\tMIA\t7\n"}]},"apps":[],"jobName":"paragraph_1512172000888_-1783099985","id":"20171123-102627_1669385618","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7428"},{"title":"Average Departure Delay by Origin","text":"%sql\nSELECT origin, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY origin\nORDER BY avgdelay desc","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tavgdelay\nSFO\t20.306176084099867\nEWR\t16.31737378525717\nDEN\t16.167720777699696\nIAH\t15.925946093111898\nORD\t14.880476190476191\nATL\t14.699547814436443\nMIA\t14.068474576271186\nBOS\t12.440173253925284\nLGA\t11.547475961538462\n"}]},"apps":[],"jobName":"paragraph_1512172000893_-1785023729","id":"20171122-204822_1853914961","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7429"},{"text":"%sql\nSELECT dest, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dest\nORDER BY avgdelay desc","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dest\tavgdelay\nSFO\t25.12807752750131\nEWR\t20.27488714659064\nLGA\t14.455166867712103\nATL\t13.588656021290753\nORD\t13.525756600128783\nDEN\t12.728005691249704\nIAH\t12.658908507223114\nBOS\t12.395548404397962\nMIA\t12.364271232259519\n"}]},"apps":[],"jobName":"paragraph_1512172000898_-1699224725","id":"20171122-204956_303346727","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7430"},{"text":"%sql\nSELECT dofW, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dofW\nORDER BY avgdelay desc","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tavgdelay\n7\t18.75420240137221\n1\t17.404697121580984\n6\t16.829883897021706\n4\t14.609846568875401\n2\t13.50552611657835\n5\t13.10193236714976\n3\t11.3646816543676\n"}]},"apps":[],"jobName":"paragraph_1512172000905_-1703456963","id":"20171122-205057_803943925","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7431"},{"title":"Add Labels for Delayed Flights and count","text":"val delaybucketizer = new Bucketizer().setInputCol(\"depdelay\")\n  .setOutputCol(\"delayed\").setSplits(Array(0.0,40.0,Double.PositiveInfinity))\nval df4= delaybucketizer.transform(df)\ndf4.groupBy(\"delayed\").count.show","user":"anonymous","dateUpdated":"2017-12-02T03:56:13-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndelaybucketizer: org.apache.spark.ml.feature.Bucketizer = bucketizer_5f825daabffa\n\ndf4: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 11 more fields]\n+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|36790|\n|    1.0| 4558|\n+-------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1512172000907_-1702687465","id":"20170524-093402_1430077788","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:13-0800","dateFinished":"2017-12-02T03:56:25-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7432"},{"text":"val dft= delaybucketizer.transform(test)\ndft.groupBy(\"delayed\").count.show\ndf4.createOrReplaceTempView(\"flight4\")","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndft: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 11 more fields]\n+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|39665|\n|    1.0| 5783|\n+-------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1512172000908_-1704611209","id":"20171130-002103_157067560","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7433"},{"title":"Stratify the sampling to fewer Not Delayed","text":"val fractions = Map(0.0 -> .29, 1.0->1.0)\nval strain = df4.stat.sampleBy(\"delayed\", fractions, 36L)\nstrain.groupBy(\"delayed\").count.show","user":"anonymous","dateUpdated":"2017-12-02T03:56:22-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfractions: scala.collection.immutable.Map[Double,Double] = Map(0.0 -> 0.29, 1.0 -> 1.0)\n\nstrain: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 11 more fields]\n+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|10560|\n|    1.0| 4558|\n+-------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1512172000910_-1703841711","id":"20171123-050717_1328190278","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:22-0800","dateFinished":"2017-12-02T03:56:35-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7434"},{"title":"Count of Departure Delays by Hour","text":"%sql\nSELECT delayed, count(delayed),crsdephour\nFROM flight4\nGROUP BY crsdephour, delayed\norder by delayed","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"crsdephour","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tcrsdephour\n0.0\t31\t1\n0.0\t3265\t7\n0.0\t99\t0\n0.0\t170\t23\n0.0\t531\t22\n0.0\t2648\t8\n0.0\t2019\t12\n0.0\t1352\t20\n0.0\t2165\t14\n0.0\t2376\t13\n0.0\t2674\t10\n0.0\t918\t21\n0.0\t1891\t18\n0.0\t2400\t11\n0.0\t1756\t19\n0.0\t160\t24\n0.0\t2263\t6\n0.0\t2204\t9\n0.0\t2\t2\n0.0\t2100\t16\n0.0\t2250\t15\n0.0\t2876\t17\n0.0\t640\t5\n1.0\t179\t9\n1.0\t237\t12\n1.0\t380\t19\n1.0\t164\t21\n1.0\t234\t20\n1.0\t285\t11\n1.0\t358\t14\n1.0\t355\t16\n1.0\t484\t17\n1.0\t406\t18\n1.0\t27\t23\n1.0\t193\t8\n1.0\t115\t7\n1.0\t1\t1\n1.0\t72\t6\n1.0\t345\t13\n1.0\t9\t24\n1.0\t15\t5\n1.0\t66\t22\n1.0\t9\t0\n1.0\t336\t15\n1.0\t288\t10\n"}]},"apps":[],"jobName":"paragraph_1512172000918_-1694607738","id":"20170524-095127_757444423","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7435"},{"text":"%sql\nSELECT delayed,  count(delayed)\nFROM flight4\nGROUP BY delayed\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"label4","index":0,"aggr":"sum"}],"groups":[{"name":"count(carrier)","index":1,"aggr":"sum"},{"name":"count(origin)","index":2,"aggr":"sum"},{"name":"count(dest)","index":3,"aggr":"sum"},{"name":"count(dofW)","index":4,"aggr":"sum"},{"name":"count(crsdephour)","index":5,"aggr":"sum"}],"values":[]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\n0.0\t36790\n1.0\t4558\n"}]},"apps":[],"jobName":"paragraph_1512172000921_-1697300980","id":"20171130-000212_904964450","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7436"},{"title":"Count of Departure Delays by Carrier","text":"%sql\nSELECT label4, count(label4),carrier\nFROM flight4\nGROUP BY carrier, label4\norder by carrier\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"carrier","index":2,"aggr":"sum"}],"groups":[{"name":"label4","index":0,"aggr":"sum"}],"values":[{"name":"count(label4)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label4\tcount(label4)\tcarrier\n1.0\t783\tAA\n0.0\t9248\tAA\n0.0\t8990\tDL\n1.0\t1065\tDL\n0.0\t16415\tUA\n1.0\t2458\tUA\n1.0\t252\tWN\n0.0\t2137\tWN\n"}]},"apps":[],"jobName":"paragraph_1512172000924_-1698455227","id":"20170524-144751_554129160","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7437"},{"title":"Count of Departure Delays by Origin","text":"%sql\nSELECT label4, count(label4),origin\nFROM flight4 \nGROUP BY origin, label4\norder by label4\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{},"multiBarChart":{"stacked":true}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[{"name":"label4","index":0,"aggr":"sum"}],"values":[{"name":"count(label4)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label4\tcount(label4)\torigin\n0.0\t3773\tDEN\n0.0\t3388\tBOS\n0.0\t3991\tMIA\n0.0\t3218\tIAH\n0.0\t5607\tORD\n0.0\t4550\tLGA\n0.0\t3693\tEWR\n0.0\t5322\tATL\n0.0\t3248\tSFO\n1.0\t442\tLGA\n1.0\t455\tIAH\n1.0\t434\tMIA\n1.0\t306\tBOS\n1.0\t693\tORD\n1.0\t526\tEWR\n1.0\t557\tSFO\n1.0\t649\tATL\n1.0\t496\tDEN\n"}]},"apps":[],"jobName":"paragraph_1512172000926_-1697685729","id":"20171110-211045_792848918","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7438"},{"text":"%sql\nSELECT label4, count(label4) as count,origin\nFROM flight4 where label4='1.0'\nGROUP BY origin, label4\norder by count desc","dateUpdated":"2017-12-01T15:46:40-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[{"name":"label4","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label4\tcount\torigin\n1.0\t693\tORD\n1.0\t649\tATL\n1.0\t557\tSFO\n1.0\t526\tEWR\n1.0\t496\tDEN\n1.0\t455\tIAH\n1.0\t442\tLGA\n1.0\t434\tMIA\n1.0\t306\tBOS\n"}]},"apps":[],"jobName":"paragraph_1512172000939_-1714999430","id":"20171122-211508_2036968500","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7439"},{"title":"Count of Departure Delays by Origin","text":"%sql\nSELECT label4, count(label4) as count,origin, dest\nFROM flight4 where label4='1.0'\nGROUP BY origin,dest, label4\norder by count desc\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{},"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[{"name":"dest","index":3,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label4\tcount\torigin\tdest\n1.0\t175\tDEN\tSFO\n1.0\t170\tORD\tSFO\n1.0\t156\tATL\tLGA\n1.0\t144\tATL\tEWR\n1.0\t139\tSFO\tDEN\n1.0\t131\tLGA\tATL\n1.0\t124\tORD\tEWR\n1.0\t123\tSFO\tORD\n1.0\t117\tEWR\tORD\n1.0\t104\tORD\tLGA\n1.0\t99\tIAH\tSFO\n1.0\t96\tIAH\tEWR\n1.0\t94\tMIA\tLGA\n1.0\t90\tORD\tATL\n1.0\t90\tLGA\tORD\n1.0\t89\tATL\tSFO\n1.0\t81\tSFO\tEWR\n1.0\t81\tLGA\tMIA\n1.0\t77\tEWR\tATL\n1.0\t77\tEWR\tSFO\n1.0\t76\tATL\tORD\n1.0\t76\tEWR\tIAH\n1.0\t76\tORD\tDEN\n1.0\t74\tDEN\tEWR\n1.0\t72\tLGA\tBOS\n1.0\t71\tEWR\tMIA\n1.0\t67\tDEN\tLGA\n1.0\t67\tMIA\tEWR\n1.0\t67\tEWR\tBOS\n1.0\t66\tMIA\tATL\n1.0\t66\tATL\tMIA\n1.0\t64\tBOS\tLGA\n1.0\t63\tDEN\tORD\n1.0\t62\tSFO\tIAH\n1.0\t61\tSFO\tATL\n1.0\t60\tIAH\tLGA\n1.0\t58\tIAH\tMIA\n1.0\t57\tMIA\tSFO\n1.0\t55\tMIA\tIAH\n1.0\t54\tDEN\tATL\n1.0\t53\tBOS\tSFO\n1.0\t52\tSFO\tBOS\n1.0\t50\tBOS\tATL\n1.0\t50\tMIA\tORD\n1.0\t48\tATL\tBOS\n1.0\t48\tIAH\tORD\n1.0\t48\tIAH\tDEN\n1.0\t46\tORD\tMIA\n1.0\t46\tORD\tBOS\n1.0\t46\tBOS\tORD\n1.0\t45\tBOS\tEWR\n1.0\t44\tATL\tDEN\n1.0\t41\tEWR\tDEN\n1.0\t40\tDEN\tIAH\n1.0\t39\tSFO\tMIA\n1.0\t37\tLGA\tDEN\n1.0\t37\tORD\tIAH\n1.0\t32\tMIA\tBOS\n1.0\t31\tLGA\tIAH\n1.0\t28\tIAH\tATL\n1.0\t26\tATL\tIAH\n1.0\t24\tBOS\tMIA\n1.0\t18\tIAH\tBOS\n1.0\t16\tDEN\tBOS\n1.0\t13\tMIA\tDEN\n1.0\t13\tBOS\tDEN\n1.0\t11\tBOS\tIAH\n1.0\t7\tDEN\tMIA\n"}]},"apps":[],"jobName":"paragraph_1512172000947_-1705765456","id":"20171110-211530_880051230","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7440"},{"text":"%md\nIn order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature. Use a combination of StringIndexer and OneHotEncoder to convert the categorical variables in the dataset into numeric variables\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature. Use a combination of StringIndexer and OneHotEncoder to convert the categorical variables in the dataset into numeric variables</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000949_-1708073949","id":"20170603-184811_78732818","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7441"},{"title":"Use a combination of StringIndexer and OneHotEncoder to encode categorical columns","text":"// categorical Column names\nval categoricalColumns = Array( \"carrier\", \"origin\", \"dest\", \"dofW\")\n// String Indexers will encode string categorial columns\n// into a column numeric indices\nval stringIndexers = categoricalColumns.map { colName =>\n      new StringIndexer()\n        .setInputCol(colName)\n        .setOutputCol(colName + \"Indexed\")\n        .fit(df)\n}\n//OneHotEncoders map number indices column to column of binary vectors\nval encoders = categoricalColumns.map { colName =>\n      new OneHotEncoder()\n        .setInputCol(colName+\"Indexed\")\n        .setOutputCol(colName + \"Enc\")\n}\n","user":"anonymous","dateUpdated":"2017-12-02T03:56:32-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncategoricalColumns: Array[String] = Array(carrier, origin, dest, dofW)\n\nstringIndexers: Array[org.apache.spark.ml.feature.StringIndexerModel] = Array(strIdx_ecc51b206e98, strIdx_b1a7bda3de3b, strIdx_ba4bbe5c7a56, strIdx_f4b77eb24a13)\n\nencoders: Array[org.apache.spark.ml.feature.OneHotEncoder] = Array(oneHot_9495caae6044, oneHot_1d50323bd0b9, oneHot_7480f68c9590, oneHot_d4132f638d7f)\n"}]},"apps":[],"jobName":"paragraph_1512172000951_-1707304452","id":"20170508-150543_958647761","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:33-0800","dateFinished":"2017-12-02T03:56:46-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7442"},{"title":"Use VectorAssembler, a transformer,  to put features into a feature vector column","text":"//bucket the dataset into delayed and not delayed flights with a label 0/1 column \nval labeler = new Bucketizer().setInputCol(\"depdelay\")\n   .setOutputCol(\"label\")\n   .setSplits(Array( 0.0, 40.0, Double.PositiveInfinity))\nval featureCols = Array( \"carrierIndexed\", \"destIndexed\", \"originIndexed\", \n   \"dofWIndexed\",\"crsdephour\",\"crselapsedtime\",\"crsarrtime\",\"crsdeptime\",\"dist\")\n//put features into a feature vector column   \nval assembler = new VectorAssembler()\n   .setInputCols(featureCols)\n   .setOutputCol(\"features\")\n\n","user":"anonymous","dateUpdated":"2017-12-02T03:56:37-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlabeler: org.apache.spark.ml.feature.Bucketizer = bucketizer_7c3be85e3d81\n\nfeatureCols: Array[String] = Array(carrierIndexed, destIndexed, originIndexed, dofWIndexed, crsdephour, crselapsedtime, crsarrtime, crsdeptime, dist)\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_60750dbf3ac7\n"}]},"apps":[],"jobName":"paragraph_1512172000962_-1723848654","id":"20170524-223310_2121058884","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:38-0800","dateFinished":"2017-12-02T03:56:54-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7443"},{"title":"Create Decision Tree Estimator , set Label and Feature Columns ","text":"val dTree = new DecisionTreeClassifier().setLabelCol(\"label\")\n   .setFeaturesCol(\"features\")\n   .setMaxBins(7000)      ","user":"anonymous","dateUpdated":"2017-12-02T03:56:48-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndTree: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_2d2d860eac41\n"}]},"apps":[],"jobName":"paragraph_1512172000963_-1724233403","id":"20170603-185445_276463997","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:49-0800","dateFinished":"2017-12-02T03:56:55-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7444"},{"text":"%md\nSet up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model \n\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Set up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000967_-1725772399","id":"20170601-154525_1033166149","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7445"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"val steps = stringIndexers ++  Array(labeler, assembler,  dTree)\nval pipeline = new Pipeline().setStages(steps)\n","user":"anonymous","dateUpdated":"2017-12-02T03:56:59-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsteps: Array[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable}}] = Array(strIdx_ecc51b206e98, strIdx_b1a7bda3de3b, strIdx_ba4bbe5c7a56, strIdx_f4b77eb24a13, bucketizer_7c3be85e3d81, vecAssembler_60750dbf3ac7, dtc_2d2d860eac41)\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_3426cf763945\n"}]},"apps":[],"jobName":"paragraph_1512172000968_-1727696143","id":"20170508-151557_1422077156","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:56:59-0800","dateFinished":"2017-12-02T03:57:03-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7446"},{"text":"%md\r\nSpark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.\r\n","dateUpdated":"2017-12-01T15:46:40-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Spark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172000977_-1718846919","id":"20170531-154658_1298817002","dateCreated":"2017-12-01T15:46:40-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7447"},{"title":"Set up a CrossValidator with the parameters, a tree estimator and evaluator","text":"// set param grid to Search through decision tree's maxDepth parameter for best model\n// Deeper trees are potentially more accurate, but are also more likely to overfit.\n val paramGrid = new ParamGridBuilder().addGrid(dTree.maxDepth, Array( 4, 5, 6)).build()\n\nval evaluator = new MulticlassClassificationEvaluator()\n    .setLabelCol(\"label\").setPredictionCol(\"prediction\")\n    .setMetricName(\"accuracy\")   \n\n// Set up 3-fold cross validation with paramGrid\n val crossval = new CrossValidator().setEstimator(pipeline)\n      .setEvaluator (evaluator)\n      .setEstimatorParamMaps(paramGrid).setNumFolds(3)","user":"anonymous","dateUpdated":"2017-12-02T03:57:03-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tdtc_2d2d860eac41-maxDepth: 4\n}, {\n\tdtc_2d2d860eac41-maxDepth: 5\n}, {\n\tdtc_2d2d860eac41-maxDepth: 6\n})\n\nevaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_23059a70b041\n\ncrossval: org.apache.spark.ml.tuning.CrossValidator = cv_fd90339c233f\n"}]},"apps":[],"jobName":"paragraph_1512172000980_-1720001165","id":"20170508-151903_1365343172","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:57:03-0800","dateFinished":"2017-12-02T03:57:08-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7448"},{"title":"Fit the model to the input data using K-fold cross validation","text":"val ntrain = strain.drop(\"delayed\").drop(\"arrdelay\")\nprintln(ntrain.count)\nntrain.show","user":"anonymous","dateUpdated":"2017-12-02T03:57:09-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nntrain: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 9 more fields]\n15118\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------------+------+\n|                 _id|dofW|carrier|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|crselapsedtime|  dist|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------------+------+\n|AA_2017-01-01_ATL...|   7|     AA|   ATL| LGA|        17|      1700|     0.0|      1912|         132.0| 762.0|\n|AA_2017-01-01_LGA...|   7|     AA|   LGA| MIA|         7|       700|     0.0|      1017|         197.0|1096.0|\n|AA_2017-01-01_DEN...|   7|     AA|   DEN| ORD|        12|      1235|     0.0|      1600|         145.0| 888.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| IAH|        20|      2045|    80.0|      2238|         173.0| 964.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| LGA|        20|      2025|     0.0|      2325|         180.0|1096.0|\n|AA_2017-01-01_ORD...|   7|     AA|   ORD| BOS|        15|      1508|     0.0|      1818|         130.0| 867.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| LGA|        18|      1756|    85.0|      2049|         173.0|1096.0|\n|AA_2017-01-01_MIA...|   7|     AA|   MIA| DEN|        16|      1621|    43.0|      1846|         265.0|1709.0|\n|DL_2017-01-01_MIA...|   7|     DL|   MIA| ATL|        19|      1900|     4.0|      2105|         125.0| 594.0|\n|DL_2017-01-01_BOS...|   7|     DL|   BOS| ATL|        15|      1450|     6.0|      1758|         188.0| 946.0|\n|DL_2017-01-01_SFO...|   7|     DL|   SFO| ATL|         6|       610|     0.0|      1345|         275.0|2139.0|\n|DL_2017-01-01_ATL...|   7|     DL|   ATL| ORD|        15|      1500|    41.0|      1605|         125.0| 606.0|\n|DL_2017-01-01_ORD...|   7|     DL|   ORD| ATL|        12|      1240|    27.0|      1543|         123.0| 606.0|\n|DL_2017-01-01_ATL...|   7|     DL|   ATL| EWR|        19|      1930|    25.0|      2145|         135.0| 746.0|\n|DL_2017-01-01_ORD...|   7|     DL|   ORD| ATL|        10|      1000|     2.0|      1300|         120.0| 606.0|\n|DL_2017-01-01_IAH...|   7|     DL|   IAH| ATL|         6|       600|     0.0|       859|         119.0| 689.0|\n|DL_2017-01-01_BOS...|   7|     DL|   BOS| ATL|        13|      1330|    49.0|      1633|         183.0| 946.0|\n|DL_2017-01-01_ATL...|   7|     DL|   ATL| DEN|         9|       940|     0.0|      1102|         202.0|1199.0|\n|DL_2017-01-01_DEN...|   7|     DL|   DEN| ATL|         6|       600|    10.0|      1102|         182.0|1199.0|\n|DL_2017-01-01_DEN...|   7|     DL|   DEN| ATL|        13|      1317|    70.0|      1808|         171.0|1199.0|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512172000994_-1736160619","id":"20170508-151926_10766097","dateCreated":"2017-12-01T15:46:40-0800","dateStarted":"2017-12-02T03:57:09-0800","dateFinished":"2017-12-02T03:57:17-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7449"},{"title":"Use Cross Validator Estimator to fit the training data set","text":"val cvModel = crossval.fit(ntrain)","user":"anonymous","dateUpdated":"2017-12-02T03:57:15-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_fd90339c233f\n"}]},"apps":[],"jobName":"paragraph_1512172001007_-1741162355","id":"20171129-113112_994877662","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-02T03:57:16-0800","dateFinished":"2017-12-02T03:57:55-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7450"},{"text":"val treeModel = cvModel.bestModel.asInstanceOf[org.apache.spark.ml.PipelineModel].stages.last.asInstanceOf[DecisionTreeClassificationModel]\n","user":"anonymous","dateUpdated":"2017-12-02T04:00:49-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntreeModel: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_2d2d860eac41) of depth 6 with 125 nodes\n"}]},"apps":[],"jobName":"paragraph_1512172001009_-1731158883","id":"20171122-232203_359528816","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-02T04:00:50-0800","dateFinished":"2017-12-02T04:00:51-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7451"},{"text":"treeModel.explainParams() \ntreeModel.extractParamMap\ntreeModel.numNodes\ntreeModel.depth\ntreeModel.toDebugString  // note OneHotEncoding increased the number of features","user":"anonymous","dateUpdated":"2017-12-02T04:00:59-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\nres23: String =\ncacheNodeIds: If false, the algorithm will pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance. Caching can speed up training of deeper trees. (default: false)\ncheckpointInterval: set checkpoint interval (>= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations (default: 10)\nfeaturesCol: features column name (default: features, current: features)\nimpurity: Criterion used for information gain calculation (case-insensitive). Supported options: entropy, gini (default: gini)\nlabelCol: label column name (default: label, current: label)\nmaxBins: Max number of bins for discretizing continuous features.  Must be >=2 and >= number of categories for any categorical featu...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nres24: org.apache.spark.ml.param.ParamMap =\n{\n\tdtc_2d2d860eac41-cacheNodeIds: false,\n\tdtc_2d2d860eac41-checkpointInterval: 10,\n\tdtc_2d2d860eac41-featuresCol: features,\n\tdtc_2d2d860eac41-impurity: gini,\n\tdtc_2d2d860eac41-labelCol: label,\n\tdtc_2d2d860eac41-maxBins: 7000,\n\tdtc_2d2d860eac41-maxDepth: 6,\n\tdtc_2d2d860eac41-maxMemoryInMB: 256,\n\tdtc_2d2d860eac41-minInfoGain: 0.0,\n\tdtc_2d2d860eac41-minInstancesPerNode: 1,\n\tdtc_2d2d860eac41-predictionCol: prediction,\n\tdtc_2d2d860eac41-probabilityCol: probability,\n\tdtc_2d2d860eac41-rawPredictionCol: rawPrediction,\n\tdtc_2d2d860eac41-seed: 159147643\n}\n\nres25: Int = 125\n\nres26: Int = 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nres27: String =\n\"DecisionTreeClassificationModel (uid=dtc_2d2d860eac41) of depth 6 with 125 nodes\n  If (feature 7 <= 1014.0)\n   If (feature 7 <= 759.0)\n    If (feature 6 <= 913.0)\n     If (feature 2 in {0.0,1.0,2.0,4.0,5.0,8.0})\n      If (feature 7 <= 730.0)\n       If (feature 1 in {2.0,6.0,7.0,8.0})\n        Predict: 0.0\n       Else (feature 1 not in {2.0,6.0,7.0,8.0})\n        Predict: 0.0\n      Else (feature 7 > 730.0)\n       If (feature 3 in {0.0,1.0,2.0})\n        Predict: 0.0\n       Else (feature 3 not in {0.0,1.0,2.0})\n        Predict: 1.0\n     Else (feature 2 not in {0.0,1.0,2.0,4.0,5.0,8.0})\n      If (feature 5 <= 245.0)\n       If (feature 6 <= 601.0)\n        Predict: 1.0\n       Else (feature 6 > 601.0)\n        Predict: 0.0\n      Else (feature 5 > 245.0)\n       Predict: 1.0\n    El..."}]},"apps":[],"jobName":"paragraph_1512172001011_-1730389386","id":"20171122-232845_814296940","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-02T04:00:59-0800","dateFinished":"2017-12-02T04:01:06-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7452"},{"text":"treeModel.toDebugString ","user":"anonymous","dateUpdated":"2017-12-01T16:38:39-0800","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nres44: String =\n\"DecisionTreeClassificationModel (uid=dtc_ab3e8e171adc) of depth 6 with 125 nodes\n  If (feature 7 <= 1014.0)\n   If (feature 7 <= 759.0)\n    If (feature 6 <= 913.0)\n     If (feature 2 in {0.0,1.0,2.0,4.0,5.0,8.0})\n      If (feature 7 <= 730.0)\n       If (feature 1 in {2.0,6.0,7.0,8.0})\n        Predict: 0.0\n       Else (feature 1 not in {2.0,6.0,7.0,8.0})\n        Predict: 0.0\n      Else (feature 7 > 730.0)\n       If (feature 3 in {0.0,1.0,2.0})\n        Predict: 0.0\n       Else (feature 3 not in {0.0,1.0,2.0})\n        Predict: 1.0\n     Else (feature 2 not in {0.0,1.0,2.0,4.0,5.0,8.0})\n      If (feature 5 <= 245.0)\n       If (feature 6 <= 601.0)\n        Predict: 1.0\n       Else (feature 6 > 601.0)\n        Predict: 0.0\n      Else (feature 5 > 245.0)\n       Predict: 1.0\n    El..."}]},"apps":[],"jobName":"paragraph_1512174324882_235032758","id":"20171201-162524_782238578","dateCreated":"2017-12-01T16:25:24-0800","dateStarted":"2017-12-01T16:38:39-0800","dateFinished":"2017-12-01T16:38:39-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7453"},{"text":"    val featureImportances = treeModel.featureImportances.toArray\n\n    val fis = s\"features importances:\\n ${featureCols.zip(featureImportances).map(t => s\"\\t${t._1} = ${t._2}\").mkString(\"\\n\")}\\n\"\n    println(fis)\n","user":"anonymous","dateUpdated":"2017-12-02T04:01:38-0800","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureImportances: Array[Double] = Array(0.004192854363702409, 0.21774183985285903, 0.13670361340537518, 0.10005627669374144, 0.0, 0.025997986377917434, 0.10327855147775684, 0.4120288778286475, 0.0)\n\n\n\n\n\n\n\n\n\n\n\n\nfis: String =\n\"features importances:\n \tcarrierIndexed = 0.004192854363702409\n\tdestIndexed = 0.21774183985285903\n\toriginIndexed = 0.13670361340537518\n\tdofWIndexed = 0.10005627669374144\n\tcrsdephour = 0.0\n\tcrselapsedtime = 0.025997986377917434\n\tcrsarrtime = 0.10327855147775684\n\tcrsdeptime = 0.4120288778286475\n\tdist = 0.0\n\"\nfeatures importances:\n \tcarrierIndexed = 0.004192854363702409\n\tdestIndexed = 0.21774183985285903\n\toriginIndexed = 0.13670361340537518\n\tdofWIndexed = 0.10005627669374144\n\tcrsdephour = 0.0\n\tcrselapsedtime = 0.025997986377917434\n\tcrsarrtime = 0.10327855147775684\n\tcrsdeptime = 0.4120288778286475\n\tdist = 0.0\n\n"}]},"apps":[],"jobName":"paragraph_1512216082366_1583884062","id":"20171202-040122_422329059","dateCreated":"2017-12-02T04:01:22-0800","dateStarted":"2017-12-02T04:01:38-0800","dateFinished":"2017-12-02T04:01:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7454"},{"text":"    val featureImportances = treeModel.featureImportances.toArray\n\n    val fis = s\"features importances:\\n ${featureCols.zip(featureImportances).map(t => s\"\\t${t._1} = ${t._2}\").mkString(\"\\n\")}\\n\"\n    println(fis)","user":"anonymous","dateUpdated":"2017-12-02T03:40:04-0800","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1512214789810_-1661923889","id":"20171202-033949_621045592","dateCreated":"2017-12-02T03:39:49-0800","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7455"},{"text":"%md\r\nThe actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We'll transform the test set with the model pipeline, which will map the features according to the same recipe. \r\n","dateUpdated":"2017-12-01T15:46:41-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We&rsquo;ll transform the test set with the model pipeline, which will map the features according to the same recipe.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172001028_-1652285359","id":"20170602-155317_1487132664","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7456"},{"title":"Get Predictions from Test dataset ","text":"//transform the test set with the model pipeline,\n//which will map the features according to the same recipe\nval predictions = cvModel.transform(test)\n","user":"anonymous","dateUpdated":"2017-12-01T16:40:28-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npredictions: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 19 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512172001034_-1653054857","id":"20170508-155848_1997894070","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-01T16:40:29-0800","dateFinished":"2017-12-01T16:40:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7457"},{"text":"%md\nAccuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. \n\nIn this case, the evaluation returns 82% precision. ","dateUpdated":"2017-12-01T15:46:41-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. </p>\n<p>In this case, the evaluation returns 82% precision.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1512172001039_-1654978601","id":"20170602-161538_1648758337","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7458"},{"title":"Evaluate the predictions accuracy","text":"\nval accuracy = evaluator.evaluate(predictions)\n","user":"anonymous","dateUpdated":"2017-12-01T16:40:34-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\naccuracy: Double = 0.8409831015666256\n"}]},"apps":[],"jobName":"paragraph_1512172001040_-1644590381","id":"20170602-155622_1453197792","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-01T16:40:34-0800","dateFinished":"2017-12-01T16:40:36-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7459"},{"title":"Calculate some more metrics","text":"val lp = predictions.select(\"label\", \"prediction\")\nval counttotal = predictions.count()\nval label0count  = lp.filter($\"label\" === 0.0).count()\nval pred0count = lp.filter($\"prediction\" === 0.0).count()\nval label1count = lp.filter($\"label\" === 1.0).count()\nval pred1count = lp.filter($\"prediction\" === 1.0).count()\n\nval correct = lp.filter($\"label\" === $\"prediction\").count()\nval wrong = lp.filter(not($\"label\" === $\"prediction\")).count()\nval ratioWrong = wrong.toDouble / counttotal.toDouble\nval ratioCorrect = correct.toDouble / counttotal.toDouble\nval truep = lp.filter($\"prediction\" === 0.0)\n    .filter($\"label\" === $\"prediction\").count() / counttotal.toDouble\nval truen = lp.filter($\"prediction\" === 1.0)\n    .filter($\"label\" === $\"prediction\").count() / counttotal.toDouble\nval falsep = lp.filter($\"prediction\" === 0.0)\n    .filter(not($\"label\" === $\"prediction\")).count() / counttotal.toDouble\nval falsen = lp.filter($\"prediction\" === 1.0)\n    .filter(not($\"label\" === $\"prediction\")).count() / counttotal.toDouble","user":"anonymous","dateUpdated":"2017-12-01T16:40:47-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlp: org.apache.spark.sql.DataFrame = [label: double, prediction: double]\n\ncounttotal: Long = 45448\n\nlabel0count: Long = 39665\n\npred0count: Long = 42762\n\nlabel1count: Long = 5783\n\npred1count: Long = 2686\n\ncorrect: Long = 38221\n\nwrong: Long = 7227\n\nratioWrong: Double = 0.1590168984333744\n\nratioCorrect: Double = 0.8409831015666256\n\ntruep: Double = 0.8273191339552896\n\ntruen: Double = 0.013663967611336033\n\nfalsep: Double = 0.11358035557120226\n\nfalsen: Double = 0.04543654286217215\n"}]},"apps":[],"jobName":"paragraph_1512172001047_-1645744628","id":"20171123-065716_47627676","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-01T16:40:47-0800","dateFinished":"2017-12-01T16:41:05-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7460"},{"text":"cvModel.write.overwrite().save(\"/user/user01/data/tempModel\")","user":"anonymous","dateUpdated":"2017-12-01T16:56:56-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1512172001050_-1646898874","id":"20171107-112306_2124778398","dateCreated":"2017-12-01T15:46:41-0800","dateStarted":"2017-12-01T16:56:56-0800","dateFinished":"2017-12-01T16:57:03-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7461"},{"text":"import org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nval sameCVModel = CrossValidatorModel.load(\"/user/user01/data/tempModel\")","dateUpdated":"2017-12-01T16:56:47-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\n\nsameCVModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_9c16298c9eba\n"}]},"apps":[],"jobName":"paragraph_1512172001056_-1663058328","id":"20171107-112400_500996456","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7462"},{"text":"val predictions2 =  sameCVModel.transform(test)","dateUpdated":"2017-12-01T15:46:41-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npredictions2: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 25 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512172001058_-1662288830","id":"20171107-112846_1253092466","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7463"},{"text":"predictions2.show","dateUpdated":"2017-12-01T15:46:41-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------------+--------------+-------------+-----------+-------------+---------------+----------+-------------+-------------+-----+--------------------+---------------+--------------------+----------+\n|                 _id|dofW|carrier|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|dofWIndexed|crsdephourIndexed|carrierIndexed|originIndexed|destIndexed|      dofWEnc|  crsdephourEnc|carrierEnc|    originEnc|      destEnc|label|            features|  rawPrediction|         probability|prediction|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------------+--------------+-------------+-----------+-------------+---------------+----------+-------------+-------------+-----+--------------------+---------------+--------------------+----------+\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| BOS|         9|     930.0|     0.0|    1155.0|     0.0|         145.0| 946.0|        5.0|              9.0|           3.0|          1.0|        8.0|(6,[5],[1.0])| (22,[9],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  0.0|(51,[5,18,34,47,4...| [1089.0,231.0]|       [0.825,0.175]|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| BOS|        19|    1935.0|   243.0|    2215.0|   210.0|         160.0| 946.0|        5.0|             13.0|           3.0|          1.0|        8.0|(6,[5],[1.0])|(22,[13],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  1.0|(51,[5,18,38,47,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| BOS|        12|    1235.0|    11.0|    1505.0|     0.0|         150.0| 946.0|        5.0|             12.0|           3.0|          1.0|        8.0|(6,[5],[1.0])|(22,[12],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  0.0|(51,[5,18,37,47,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| DEN|        10|    1035.0|    28.0|    1200.0|    59.0|         205.0|1199.0|        5.0|              2.0|           3.0|          1.0|        4.0|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(51,[5,13,18,27,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| DEN|        13|    1330.0|    16.0|    1450.0|    29.0|         200.0|1199.0|        5.0|              4.0|           3.0|          1.0|        4.0|(6,[5],[1.0])| (22,[4],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(51,[5,13,18,29,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| DEN|         6|     610.0|     1.0|     735.0|     3.0|         205.0|1199.0|        5.0|             10.0|           3.0|          1.0|        4.0|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(51,[5,13,18,35,4...|   [814.0,65.0]|[0.92605233219567...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| DEN|        16|    1635.0|     2.0|    1800.0|    12.0|         205.0|1199.0|        5.0|              8.0|           3.0|          1.0|        4.0|(6,[5],[1.0])| (22,[8],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(51,[5,13,18,33,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| LGA|        17|    1735.0|    52.0|    1940.0|    57.0|         125.0| 762.0|        5.0|              1.0|           3.0|          1.0|        2.0|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  1.0|(51,[5,11,18,26,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| LGA|        13|    1250.0|    52.0|    1455.0|    58.0|         125.0| 762.0|        5.0|              4.0|           3.0|          1.0|        2.0|(6,[5],[1.0])| (22,[4],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  1.0|(51,[5,11,18,29,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| LGA|        21|    2055.0|   104.0|    2310.0|    75.0|         135.0| 762.0|        5.0|             15.0|           3.0|          1.0|        2.0|(6,[5],[1.0])|(22,[15],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  1.0|(51,[5,11,18,40,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_ATL...|   3|     WN|   ATL| LGA|         6|     555.0|     0.0|     800.0|     0.0|         125.0| 762.0|        5.0|             10.0|           3.0|          1.0|        2.0|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(51,[5,11,18,35,4...|   [814.0,65.0]|[0.92605233219567...|       0.0|\n|WN_2017-03-01_BOS...|   3|     WN|   BOS| ATL|        14|    1350.0|     1.0|    1650.0|     0.0|         180.0| 946.0|        5.0|              7.0|           3.0|          7.0|        1.0|(6,[5],[1.0])| (22,[7],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,24,32,4...|[3132.0,1094.0]|[0.74112636062470...|       0.0|\n|WN_2017-03-01_BOS...|   3|     WN|   BOS| ATL|         9|     905.0|     0.0|    1210.0|     0.0|         185.0| 946.0|        5.0|              9.0|           3.0|          7.0|        1.0|(6,[5],[1.0])| (22,[9],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,24,34,4...| [1089.0,231.0]|       [0.825,0.175]|       0.0|\n|WN_2017-03-01_BOS...|   3|     WN|   BOS| ATL|         6|     625.0|     0.0|     935.0|     0.0|         190.0| 946.0|        5.0|             10.0|           3.0|          7.0|        1.0|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,24,35,4...|  [941.0,121.0]|[0.88606403013182...|       0.0|\n|WN_2017-03-01_BOS...|   3|     WN|   BOS| DEN|        17|    1745.0|    23.0|    2035.0|    33.0|         290.0|1754.0|        5.0|              1.0|           3.0|          7.0|        4.0|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[4],[1.0])|  0.0|(51,[5,13,24,26,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_DEN...|   3|     WN|   DEN| ATL|         6|     630.0|     0.0|    1120.0|     0.0|         170.0|1199.0|        5.0|             10.0|           3.0|          4.0|        1.0|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,21,35,4...|  [941.0,121.0]|[0.88606403013182...|       0.0|\n|WN_2017-03-01_DEN...|   3|     WN|   DEN| ATL|        17|    1740.0|     0.0|    2225.0|     0.0|         165.0|1199.0|        5.0|              1.0|           3.0|          4.0|        1.0|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,21,26,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_DEN...|   3|     WN|   DEN| ATL|        10|    1005.0|     0.0|    1455.0|     0.0|         170.0|1199.0|        5.0|              2.0|           3.0|          4.0|        1.0|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,21,27,4...|  [402.0,135.0]|[0.74860335195530...|       0.0|\n|WN_2017-03-01_DEN...|   3|     WN|   DEN| ATL|        20|    2000.0|     5.0|      45.0|     0.0|         165.0|1199.0|        5.0|             14.0|           3.0|          4.0|        1.0|(6,[5],[1.0])|(22,[14],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(51,[5,10,21,39,4...|[2175.0,1203.0]|[0.64387211367673...|       0.0|\n|WN_2017-03-01_DEN...|   3|     WN|   DEN| BOS|        10|    1005.0|     6.0|    1555.0|     3.0|         230.0|1754.0|        5.0|              2.0|           3.0|          4.0|        8.0|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[4],[1.0])|    (8,[],[])|  0.0|(51,[5,21,27,47,4...|  [402.0,135.0]|[0.74860335195530...|       0.0|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------------+--------------+-------------+-----------+-------------+---------------+----------+-------------+-------------+-----+--------------------+---------------+--------------------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512172001064_-1666136319","id":"20171107-112947_525619195","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7464"},{"text":"val accuracy2 = evaluator.evaluate(predictions2)\nevaluator.explainParams()","dateUpdated":"2017-12-01T15:46:41-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\naccuracy2: Double = 0.8110147861292026\n\n\n\n\nres83: String =\nlabelCol: label column name (default: label, current: label)\nmetricName: metric name in evaluation (f1|weightedPrecision|weightedRecall|accuracy) (default: f1, current: accuracy)\npredictionCol: prediction column name (default: prediction, current: prediction)\n"}]},"apps":[],"jobName":"paragraph_1512172001068_-1667675315","id":"20171107-113000_1427348134","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7465"},{"text":"test.show","dateUpdated":"2017-12-01T15:46:41-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|   1|   3|2017-02-01|     WN| 1421|   ATL| BOS|         9|       930|     0.0|      1155|     0.0|         145.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4079|   ATL| BOS|        19|      1935|    20.0|      2215|     0.0|         160.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4166|   ATL| BOS|        12|      1235|     0.0|      1505|     0.0|         150.0| 946.0|\n|   1|   3|2017-02-01|     WN|  139|   ATL| DEN|        10|      1035|     0.0|      1200|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  596|   ATL| DEN|        13|      1330|     0.0|      1450|     3.0|         200.0|1199.0|\n|   1|   3|2017-02-01|     WN| 1613|   ATL| DEN|         6|       610|     0.0|       735|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN| 4491|   ATL| DEN|        16|      1635|     0.0|      1800|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  302|   ATL| LGA|        17|      1735|     0.0|      1940|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  446|   ATL| LGA|         8|       835|     0.0|      1050|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1144|   ATL| LGA|        13|      1250|     0.0|      1455|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1437|   ATL| LGA|        21|      2055|     0.0|      2310|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1602|   ATL| LGA|         6|       555|     0.0|       800|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  285|   BOS| ATL|        14|      1350|     0.0|      1650|     0.0|         180.0| 946.0|\n|   1|   3|2017-02-01|     WN|  331|   BOS| ATL|         9|       905|     0.0|      1210|     0.0|         185.0| 946.0|\n|   1|   3|2017-02-01|     WN|  335|   BOS| ATL|         6|       625|     0.0|       935|     3.0|         190.0| 946.0|\n|   1|   3|2017-02-01|     WN| 1832|   BOS| DEN|        17|      1745|     0.0|      2035|    49.0|         290.0|1754.0|\n|   1|   3|2017-02-01|     WN|  145|   DEN| ATL|         6|       630|     0.0|      1120|     0.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  547|   DEN| ATL|        17|      1740|    34.0|      2225|    54.0|         165.0|1199.0|\n|   1|   3|2017-02-01|     WN|  559|   DEN| ATL|        10|      1005|     0.0|      1455|    22.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  754|   DEN| BOS|        10|      1005|     9.0|      1555|    13.0|         230.0|1754.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512172001077_-1658826090","id":"20171122-090737_1330310819","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7466"},{"dateUpdated":"2017-12-01T15:46:41-0800","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1512172001081_-1660365086","id":"20171122-091021_1615582434","dateCreated":"2017-12-01T15:46:41-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7467"}],"name":"sparkmlpipelineflightdelayswithoutencoder","id":"2CZH1YMGA","angularObjects":{"2CTHAGJ51:shared_process":[],"2CTFEJCW1:shared_process":[],"2CU928YA7:shared_process":[],"2CUSCHS1V:shared_process":[],"2CTGXT5AB:shared_process":[],"2CUHXVGRB:shared_process":[],"2CSNF42WC:shared_process":[],"2CU45S3XK:shared_process":[],"2CV35ABMV:shared_process":[],"2CUH4E5VP:shared_process":[],"2CVNXVD14:shared_process":[],"2CW8GSR5S:shared_process":[],"2CWBB1M88:shared_process":[],"2CT4ZSMCD:shared_process":[],"2CUQTDJZW:shared_process":[],"2CSMEVREU:shared_process":[],"2CVD5FM5C:shared_process":[],"2CTNB4WJK:shared_process":[],"2CUBZKAK6:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}